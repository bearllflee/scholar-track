// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: system.proto

package user

import (
	"context"

	"github.com/bearllflee/scholar-track/rpc/system/system"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddPolicyReq           = system.AddPolicyReq
	AddPolicyResp          = system.AddPolicyResp
	AddRoleReq             = system.AddRoleReq
	AddRoleResp            = system.AddRoleResp
	ChangePasswordReq      = system.ChangePasswordReq
	ChangePasswordResp     = system.ChangePasswordResp
	DeleteRoleReq          = system.DeleteRoleReq
	DeleteRoleResp         = system.DeleteRoleResp
	DeleteUserReq          = system.DeleteUserReq
	DeleteUserResp         = system.DeleteUserResp
	EnforceReq             = system.EnforceReq
	EnforceResp            = system.EnforceResp
	FindUserByUsernameReq  = system.FindUserByUsernameReq
	FindUserByUsernameResp = system.FindUserByUsernameResp
	QuerySelfInfoReq       = system.QuerySelfInfoReq
	QuerySelfInfoResp      = system.QuerySelfInfoResp
	QueryUserDetailReq     = system.QueryUserDetailReq
	QueryUserDetailResp    = system.QueryUserDetailResp
	QueryUserListReq       = system.QueryUserListReq
	QueryUserListResp      = system.QueryUserListResp
	RegisterReq            = system.RegisterReq
	RegisterResp           = system.RegisterResp
	ResetPasswordReq       = system.ResetPasswordReq
	ResetPasswordResp      = system.ResetPasswordResp
	RoleResp               = system.RoleResp
	RoleTreeListResp       = system.RoleTreeListResp
	RoleTreeReq            = system.RoleTreeReq
	RoleTreeResp           = system.RoleTreeResp
	Rule                   = system.Rule
	SetSelfInfoReq         = system.SetSelfInfoReq
	SetSelfInfoResp        = system.SetSelfInfoResp
	SetUserInfoReq         = system.SetUserInfoReq
	SetUserInfoResp        = system.SetUserInfoResp
	SetUserRoleReq         = system.SetUserRoleReq
	SetUserRoleResp        = system.SetUserRoleResp
	UpdateRoleReq          = system.UpdateRoleReq
	UpdateRoleResp         = system.UpdateRoleResp

	User interface {
		QueryUserDetail(ctx context.Context, in *QueryUserDetailReq, opts ...grpc.CallOption) (*QueryUserDetailResp, error)
		QueryUserList(ctx context.Context, in *QueryUserListReq, opts ...grpc.CallOption) (*QueryUserListResp, error)
		FindUserByUsername(ctx context.Context, in *FindUserByUsernameReq, opts ...grpc.CallOption) (*FindUserByUsernameResp, error)
		Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error)
		SetUserInfo(ctx context.Context, in *SetUserInfoReq, opts ...grpc.CallOption) (*SetUserInfoResp, error)
		SetSelfInfo(ctx context.Context, in *SetSelfInfoReq, opts ...grpc.CallOption) (*SetSelfInfoResp, error)
		QuerySelfInfo(ctx context.Context, in *QuerySelfInfoReq, opts ...grpc.CallOption) (*QuerySelfInfoResp, error)
		SetUserRole(ctx context.Context, in *SetUserRoleReq, opts ...grpc.CallOption) (*SetUserRoleResp, error)
		ResetPassword(ctx context.Context, in *ResetPasswordReq, opts ...grpc.CallOption) (*ResetPasswordResp, error)
		ChangePassword(ctx context.Context, in *ChangePasswordReq, opts ...grpc.CallOption) (*ChangePasswordResp, error)
		DeleteUser(ctx context.Context, in *DeleteUserReq, opts ...grpc.CallOption) (*DeleteUserResp, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) QueryUserDetail(ctx context.Context, in *QueryUserDetailReq, opts ...grpc.CallOption) (*QueryUserDetailResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.QueryUserDetail(ctx, in, opts...)
}

func (m *defaultUser) QueryUserList(ctx context.Context, in *QueryUserListReq, opts ...grpc.CallOption) (*QueryUserListResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.QueryUserList(ctx, in, opts...)
}

func (m *defaultUser) FindUserByUsername(ctx context.Context, in *FindUserByUsernameReq, opts ...grpc.CallOption) (*FindUserByUsernameResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.FindUserByUsername(ctx, in, opts...)
}

func (m *defaultUser) Register(ctx context.Context, in *RegisterReq, opts ...grpc.CallOption) (*RegisterResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) SetUserInfo(ctx context.Context, in *SetUserInfoReq, opts ...grpc.CallOption) (*SetUserInfoResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.SetUserInfo(ctx, in, opts...)
}

func (m *defaultUser) SetSelfInfo(ctx context.Context, in *SetSelfInfoReq, opts ...grpc.CallOption) (*SetSelfInfoResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.SetSelfInfo(ctx, in, opts...)
}

func (m *defaultUser) QuerySelfInfo(ctx context.Context, in *QuerySelfInfoReq, opts ...grpc.CallOption) (*QuerySelfInfoResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.QuerySelfInfo(ctx, in, opts...)
}

func (m *defaultUser) SetUserRole(ctx context.Context, in *SetUserRoleReq, opts ...grpc.CallOption) (*SetUserRoleResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.SetUserRole(ctx, in, opts...)
}

func (m *defaultUser) ResetPassword(ctx context.Context, in *ResetPasswordReq, opts ...grpc.CallOption) (*ResetPasswordResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.ResetPassword(ctx, in, opts...)
}

func (m *defaultUser) ChangePassword(ctx context.Context, in *ChangePasswordReq, opts ...grpc.CallOption) (*ChangePasswordResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.ChangePassword(ctx, in, opts...)
}

func (m *defaultUser) DeleteUser(ctx context.Context, in *DeleteUserReq, opts ...grpc.CallOption) (*DeleteUserResp, error) {
	client := system.NewUserClient(m.cli.Conn())
	return client.DeleteUser(ctx, in, opts...)
}
