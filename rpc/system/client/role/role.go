// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: system.proto

package role

import (
	"context"

	"github.com/bearllflee/scholar-track/rpc/system/system"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddPolicyReq           = system.AddPolicyReq
	AddPolicyResp          = system.AddPolicyResp
	AddRoleReq             = system.AddRoleReq
	AddRoleResp            = system.AddRoleResp
	ChangePasswordReq      = system.ChangePasswordReq
	ChangePasswordResp     = system.ChangePasswordResp
	DeleteRoleReq          = system.DeleteRoleReq
	DeleteRoleResp         = system.DeleteRoleResp
	DeleteUserReq          = system.DeleteUserReq
	DeleteUserResp         = system.DeleteUserResp
	EnforceReq             = system.EnforceReq
	EnforceResp            = system.EnforceResp
	FindUserByUsernameReq  = system.FindUserByUsernameReq
	FindUserByUsernameResp = system.FindUserByUsernameResp
	QuerySelfInfoReq       = system.QuerySelfInfoReq
	QuerySelfInfoResp      = system.QuerySelfInfoResp
	QueryUserDetailReq     = system.QueryUserDetailReq
	QueryUserDetailResp    = system.QueryUserDetailResp
	QueryUserListReq       = system.QueryUserListReq
	QueryUserListResp      = system.QueryUserListResp
	RegisterReq            = system.RegisterReq
	RegisterResp           = system.RegisterResp
	ResetPasswordReq       = system.ResetPasswordReq
	ResetPasswordResp      = system.ResetPasswordResp
	RoleResp               = system.RoleResp
	RoleTreeListResp       = system.RoleTreeListResp
	RoleTreeReq            = system.RoleTreeReq
	RoleTreeResp           = system.RoleTreeResp
	Rule                   = system.Rule
	SetSelfInfoReq         = system.SetSelfInfoReq
	SetSelfInfoResp        = system.SetSelfInfoResp
	SetUserInfoReq         = system.SetUserInfoReq
	SetUserInfoResp        = system.SetUserInfoResp
	SetUserRoleReq         = system.SetUserRoleReq
	SetUserRoleResp        = system.SetUserRoleResp
	UpdateRoleReq          = system.UpdateRoleReq
	UpdateRoleResp         = system.UpdateRoleResp

	Role interface {
		AddRole(ctx context.Context, in *AddRoleReq, opts ...grpc.CallOption) (*AddRoleResp, error)
		DeleteRole(ctx context.Context, in *DeleteRoleReq, opts ...grpc.CallOption) (*DeleteRoleResp, error)
		UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*UpdateRoleResp, error)
		RoleTree(ctx context.Context, in *RoleTreeReq, opts ...grpc.CallOption) (*RoleTreeListResp, error)
	}

	defaultRole struct {
		cli zrpc.Client
	}
)

func NewRole(cli zrpc.Client) Role {
	return &defaultRole{
		cli: cli,
	}
}

func (m *defaultRole) AddRole(ctx context.Context, in *AddRoleReq, opts ...grpc.CallOption) (*AddRoleResp, error) {
	client := system.NewRoleClient(m.cli.Conn())
	return client.AddRole(ctx, in, opts...)
}

func (m *defaultRole) DeleteRole(ctx context.Context, in *DeleteRoleReq, opts ...grpc.CallOption) (*DeleteRoleResp, error) {
	client := system.NewRoleClient(m.cli.Conn())
	return client.DeleteRole(ctx, in, opts...)
}

func (m *defaultRole) UpdateRole(ctx context.Context, in *UpdateRoleReq, opts ...grpc.CallOption) (*UpdateRoleResp, error) {
	client := system.NewRoleClient(m.cli.Conn())
	return client.UpdateRole(ctx, in, opts...)
}

func (m *defaultRole) RoleTree(ctx context.Context, in *RoleTreeReq, opts ...grpc.CallOption) (*RoleTreeListResp, error) {
	client := system.NewRoleClient(m.cli.Conn())
	return client.RoleTree(ctx, in, opts...)
}
